{"version":3,"sources":["assets/help.svg","assets/footer-download.svg","assets/coefficient.svg","assets/skewness.svg","assets/download.svg","assets/voronoi-analyzer-example.csv","information/Information.js","downloads/Downloads.js","footer/Footer.js","helpers/getInitialPositions.js","helpers/getApices.js","helpers/findFinite.js","helpers/getAreaInfo.js","helpers/findSkewnessAndCoefficient.js","graph/Graph.js","diagram/Diagram.js","calculations/Calculations.js","assets/close.svg","popup/Popup.js","App.js","index.js"],"names":["Information","className","href","exampleCSV","download","src","alt","footerDownload","target","rel","skewness","coefficient","Downloads","props","positionsObj","areas","makeSVGurl","selector","svg","document","querySelector","setAttribute","svgData","outerHTML","svgBlob","Blob","type","URL","createObjectURL","alert","window","location","reload","makeCSVurl","data","csvBlob","areasDataStr","i","length","areaStr","toString","concat","diagramURL","histogramURL","areasURL","coefficientURL","skewnessURL","Footer","useState","uploadedFile","setUploadedFile","fileInput","useRef","buttonClicked","e","preventDefault","openPopup","ref","id","accept","onChange","closePopup","input","files","file","csv","then","revokeObjectURL","positions","map","obj","x","parseFloat","y","Number","isNaN","Infinity","Error","positionsCallBack","catch","onClick","current","click","help","getInitialPositions","populatePositions","num","factor","shift","coordinates","Math","random","push","getApices","reduce","apices","curr","min","max","findFinite","voronoi","vectors","isFinite","polygonArea","X","Y","numPoints","area","j","abs","getAreaInfo","areasObjs","totalArea","polygons","cellPolygons","polygon","pop","vertex","voronoiIndex","findSkewnessAndCoefficient","areasInfo","n","meanArea","skewnessTopSigma","skewnessBottomSigma","coefficientSigma","previousNonZeroStdOfAreasOfNeighbors","diff","pow","neighbors","filter","index","areasOfNeighbors","totalAreaOfNeighbors","forEach","find","avgAreaOfNeighbors","stdOfAreasOfNeighbors","std","coefficientNumerator","console","log","Graph","maxArea","numberOfAreas","barsDesired","intervalSpacing","startPt","next","interval","percentage","toFixed","maxPercentage","useEffect","margin","top","right","bottom","left","width","height","innerHTML","d3","append","attr","range","domain","call","selectAll","style","text","enter","d","transition","duration","delay","lower","Diagram","renderPositions","renderMaxes","xShift","yShift","position","renderMax","tempPositions","slice","from","join","mesh","render","setTimeout","update","Calculations","name","value","decimals","arrays","split","countDecimals","start","end","Popup","isOpen","child","popup","hidden","close","App","processPositions","buffer","Delaunay","setPositionsObj","popupObj","setPopupObj","childTypeName","childEl","addEventListener","key","DiagramComp","SkewnessComp","CoefficientComp","GraphComp","newObj","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a73e83fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/help.d27c6caa.svg\";","export default __webpack_public_path__ + \"static/media/footer-download.806ab3cb.svg\";","export default __webpack_public_path__ + \"static/media/coefficient.f07f7e6d.svg\";","export default __webpack_public_path__ + \"static/media/skewness.d4c26804.svg\";","export default __webpack_public_path__ + \"static/media/download.a3498030.svg\";","export default __webpack_public_path__ + \"static/media/voronoi-analyzer-example.c3f96403.csv\";","import footerDownload from '../assets/footer-download.svg';\nimport coefficient from '../assets/coefficient.svg';\nimport skewness from '../assets/skewness.svg';\nimport './Information.sass';\nimport download from '../assets/download.svg';\nimport exampleCSV from '../assets/voronoi-analyzer-example.csv';\n\nfunction Information () {\n\n  // formulae formatted through Mathcha - https://www.mathcha.io/ \n\n  return (\n    <div className=\"information-container\">\n      <h1>Usage</h1>\n      <ol>\n        <li className=\"upload-instructions\">\n        <span>\n          Upload a CSV file of the coordinates. The first record must be a header, and it must contain the field names \"x\" and \"y\" exactly.\n        </span>\n        <span>\n          <a href={exampleCSV} download=\"voronoi-analyzer-example.csv\"><img className=\"icon\" src={download} alt=\"download example csv\"/></a>Download example CSV\n        </span>\n        </li>\n        <li>\n          Click on any of the boxes for an expanded view.\n        </li>\n        <li>\n          Download the visuals and the related data using the <img className=\"icon\" src={footerDownload} alt=\"download\" /> button in the footer.\n        </li>\n      </ol>\n      <h1>Info</h1>\n      <ul>\n        <li>Welcome to Voronoi Analyzer, an app that generates the <a href=\"https://en.wikipedia.org/wiki/Voronoi_diagram\" target=\"_blank\" rel=\"noreferrer\">Voronoi diagram</a> of a given set of coordinates and performs statistical analysis on the areas of the resulting polygons. You can use it, for instance, to examine the density of cells, nuclei, etc. in micrographs. It is not, however, intended to substitute the likes of MATLAB.</li>\n        <li>Cells around the edges are artificially clipped for display, but not for calculations: Infinite cells are not factored into the histogram, skewness, or coefficient.</li>\n        <li>Negative coordinates are welcome.</li>\n        <li className=\"formula-li\">\n          <span>The formula for quantifying skewness is:</span>\n          <img src={skewness} alt=\"g\\index{i}=\\frac{\\frac{1|n} \\sum{n|i=1} (x\\index{i} - \\overline{x})\\power{3}|(\\frac{1|n} \\sum{n|i=1} (x\\index{i} - \\overline{x})\\power{2})\\power{3/2}}\" />\n          <span>where x<sub>i</sub> is the area of the i<sup>th</sup> domain and x̄ is the sample mean.<span className=\"asterisk\"> *</span></span>\n        </li>\n        <li className=\"formula-li\">\n          <span>The coefficient of clustering is determined by the ratio between the global coefficient of variance and the average local coefficient of variance in domain sizes. The formula is:</span>\n          <img src={coefficient} alt=\"c=\\frac{n\\overline{x}|𝜎\\index{x} \\sum{n|i=1} \\frac{\\overline{a\\index{i}}|𝜎\\index{a\\index{i}}} }\"/>\n          <span>where σ<sub>x</sub> is the standard deviation of all the domains, and ā and σ<sub>a<sub>i</sub></sub> are the mean and the standard deviation of the size of neighboring domains of i<sup>th</sup> domain, respectively.<span className=\"asterisk\"> *</span> If a domain only has one neighbor, in which case σ<sub>a<sub>i</sub></sub> becomes 0, forcing the coefficient to then asymptotically become 0, σ<sub>a<sub>i</sub></sub> is set to the previous non-zero σ<sub>a<sub>i</sub></sub>. If there is no such value, it is set to 1.</span>\n        </li>\n        <li>\n          Check out the public <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/hein-j/voronoi-analyzer\">Github repo</a>. Issues and pull requests welcome.\n        </li>\n      </ul>\n      <h1>\n        Acknowledgements\n      </h1>\n      <ul>\n        <li>\n          Big thanks to the <a href=\"https://d3js.org\" rel=\"noreferrer\" target=\"_blank\">D3.js</a> library for the data visualization tools.\n        </li>\n        <li>\n          <span className=\"asterisk\">*</span> — The formulae for skewness and coefficient come from <a target=\"_blank\" rel=\"noreferrer\" href=\"https://pubmed.ncbi.nlm.nih.gov/26977812/\">this open-access publication</a> in ophthalmology.\n        </li>\n        <li>\n          More citations can be found as comments in the source code.\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Information;","import download from '../assets/download.svg';\nimport './Download.sass';\n\nfunction Downloads(props) {\n\n  const {areas, coefficient, skewness} = props.positionsObj;\n\n  function makeSVGurl (selector) {\n    try {\n      const svg = document.querySelector(selector);\n      svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");  \n      const svgData = svg.outerHTML;\n      const svgBlob = new Blob([svgData], {type:\"image/svg+xml\"});\n      return URL.createObjectURL(svgBlob);  \n    } catch {\n      alert ('Couldn\\'t load the SVGs. Check your browser security settings.');\n      window.location.reload();\n    }\n  }\n  \n  function makeCSVurl (data) {\n    try {\n      const csvBlob = new Blob([data], { type:'text/csv;charset=utf-8;'});\n      return URL.createObjectURL(csvBlob);\n    } catch {\n      alert ('Couldn\\'t load the CSVs. Check your browser security settings.');\n      window.location.reload();\n    }\n  }\n  \n  let areasDataStr = '';\n  for (let i = 0; i < areas.length; i++) {\n    const areaStr = areas[i].toString();\n    // if first entry\n    if (i === 0) {\n      areasDataStr = `areas\\n${areaStr}\\n`\n      continue;\n    }\n    // if last entry\n    if (i === areas.length - 1) {\n      areasDataStr = areasDataStr.concat(areaStr);\n      break;\n    }\n    // otherwise\n    areasDataStr = areasDataStr.concat(areaStr, '\\n');\n  }\n  \n  const diagramURL = makeSVGurl('.diagram-container svg');\n  const histogramURL = makeSVGurl('.graph-container svg');\n  const areasURL = makeCSVurl(areasDataStr)\n  const coefficientURL = makeCSVurl(`coefficient\\n${coefficient}`);\n  const skewnessURL = makeCSVurl(`skewness\\n${skewness}`);\n  \n  return (\n    <div className=\"downloads-container\">\n      <div className=\"row\">\n        <a download=\"diagram.svg\" href={diagramURL}><img src={download} alt=\"download diagram\" /></a>\n        <span>Diagram</span><span>svg</span>\n      </div>\n      <div className=\"row\">\n      <a download=\"histogram.svg\" href={histogramURL}><img src={download} alt=\"download histogram\" /></a>\n        <span>Histogram</span><span>svg</span>\n      </div>\n      <div className=\"row\">\n      <a download=\"areas.csv\" href={areasURL}><img src={download} alt=\"download areas\" /></a>\n        <span>Areas</span><span>csv</span>\n      </div>\n      <div className=\"row\">\n      <a download=\"coefficient.csv\" href={coefficientURL}><img src={download} alt=\"download coefficient\" /></a>\n        <span>Coefficient</span><span>csv</span>\n      </div>\n      <div className=\"row\">\n      <a download=\"skewness.csv\" href={skewnessURL}><img src={download} alt=\"download skewness\" /></a>\n        <span>Skewness</span><span>csv</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Downloads;","import './Footer.sass';\nimport help from '../assets/help.svg';\nimport {csv} from 'd3';\nimport Information from '../information/Information';\nimport footerDownload from '../assets/footer-download.svg';\nimport {useState, useRef} from 'react';\nimport Downloads from '../downloads/Downloads';\n\nfunction Footer (props) {\n\n  const [uploadedFile, setUploadedFile] = useState('');\n\n  function handleFile (e) {\n    try {\n      props.closePopup();\n      const input = e.target;\n      if (!input.files.length) {\n        return;\n      }\n      let file = URL.createObjectURL(input.files[0]);\n      setUploadedFile(input.files[0]['name']);\n      csv(file).then((data) => {\n        URL.revokeObjectURL(file);\n        let positions = data.map((obj) => {\n          const x = parseFloat(obj.x);\n          const y = parseFloat(obj.y);\n          if (Number.isNaN(x) || Number.isNaN(y) || x === Infinity || y === Infinity) {\n            throw new Error('Invalid input: Please make sure the first record is a header with the field names \"x\" and \"y\" exactly. The rest should be a pair of real numbers (e.g. 1.23, 10.5).')\n          }\n          return [x, y];\n        });\n        props.positionsCallBack(positions);\n      })\n      .catch(e => {\n        alert(e);\n        window.location.reload();\n      })\n    } catch {\n      alert('Failed to upload file. Please try again.');\n      window.location.reload();\n    }\n  }\n\n  const fileInput = useRef(null);\n\n  function clickFileInput() {\n    fileInput.current.click();\n  }\n\n  function buttonClicked(e) {\n    e.preventDefault();\n    if (e.target.alt === 'help') {\n      props.openPopup(<Information />);\n      return;\n    }\n    props.openPopup(<Downloads />, \"Downloads\");\n  }\n\n  return (\n    <div className=\"footer\">\n      <input ref={fileInput} id=\"hidden-file-input\" type=\"file\" accept=\".csv\" onChange={handleFile}/>\n      <div id=\"displayed-file-input\">\n        <button onClick={clickFileInput}>Upload csv file</button>\n        <span>{uploadedFile}</span>\n      </div>\n      <input id=\"download-button\" type=\"image\" src={footerDownload} alt=\"download\" onClick={buttonClicked}/>\n      <input id=\"help-button\" type=\"image\" src={help} alt=\"help\" onClick={buttonClicked}/>\n    </div>\n  )\n\n}\n\nexport default Footer","function getInitialPositions () {\n  let positions = [];\n\n  function populatePositions(num, factor, shift) {\n    for (let i = 0; i < num; i++) {\n      let x = (Math.random() * factor) + shift;\n      let y = (Math.random() * factor) + shift;\n      let coordinates = [x,y];\n      positions.push(coordinates);\n    }\n  }\n\n  populatePositions(70, 200, 400);\n  populatePositions(400, 1000, 0);\n\n  return positions;\n}\n\nexport default getInitialPositions","function getApices (positions) {\n  // find both max and min of both x and y\n  const apices = positions.reduce((apices, curr) => {\n    const x = curr[0];\n    const y = curr[1];\n    return {\n      min: [\n        Math.min(x, apices.min[0]),\n        Math.min(y, apices.min[1])\n      ],\n      max: [\n        Math.max(x, apices.max[0]),\n        Math.max(y, apices.max[1])\n      ]\n    }\n  },\n  {\n    min: [Infinity,Infinity],\n    max: [-Infinity, -Infinity]\n  });\n  return apices;\n}\n\nexport default getApices;","function findFinite(voronoi) {\n  // determine which indexes are finite\n  const vectors = voronoi.vectors;\n  let isFinite = [];\n\n  for (let i = 0; i < vectors.length; i+= 4) {\n    if (vectors[i] === 0 && vectors[i + 1] === 0) {\n      isFinite.push(true);\n      continue;\n    }\n    isFinite.push(false);\n  }\n\n  return isFinite;\n}\n\nexport default findFinite;","// adapted from https://www.mathopenref.com/coordpolygonarea2.html\nfunction polygonArea(X, Y, numPoints) {\n  // accumulates area\n  let area = 0;\n  let j = numPoints - 1;\n  for (let i = 0 ; i < numPoints ; i++) {\n    area += (X[j]+X[i]) * (Y[j]-Y[i]);\n    // j is previous vertex to i\n    j = i; \n  }\n  // return a positive value, even when accumulating counter-clockwise\n  return Math.abs(area / 2);\n}\n\nfunction getAreaInfo(voronoi, isFinite) {\n  let areasObjs = [];\n  let areas = [];\n  let totalArea = 0;\n  const polygons = [...voronoi.cellPolygons()];\n\n  for (let i = 0; i < isFinite.length; i++) {\n    // find areas only for finite cells\n    if (isFinite[i] === true) {\n      let polygon = polygons[i]\n      // slice off last point, which repeats the very first one\n      polygon.pop();\n      const X = polygon.map(vertex => vertex[0]);\n      const Y = polygon.map(vertex => vertex[1]);\n      const area = polygonArea(X, Y, polygon.length);\n      areasObjs.push(\n        {\n          area: area,\n          voronoiIndex: i\n        }\n      )\n      areas.push(area)\n      totalArea+= area;\n    }\n  }\n\n  return {\n    areasObjs,\n    areas,\n    totalArea\n  }\n}\n\nexport default getAreaInfo;","import {std} from 'mathjs';\n\nfunction findSkewnessAndCoefficient(areasInfo, voronoi, isFinite) {\n  const {areasObjs, areas, totalArea} = areasInfo;\n  const n = areasObjs.length;\n  const meanArea = totalArea / n;\n  \n  // accumulators for skewness\n  let skewnessTopSigma = 0;\n  let skewnessBottomSigma = 0;\n  \n  // accumulators for coefficient\n  let coefficientSigma = 0;\n\n  let previousNonZeroStdOfAreasOfNeighbors = 1;\n  \n  // calculate the sigmas\n  for (let i=0; i < n; i++) {\n    // skewness\n    const diff = areasObjs[i].area - meanArea;\n    skewnessTopSigma += Math.pow(diff, 3);\n    skewnessBottomSigma += Math.pow(diff, 2);\n  \n    // coefficient\n    // find only neighbors with finite areas\n    const neighbors = [...voronoi.neighbors(areasObjs[i].voronoiIndex)].filter((index) => isFinite[index] === true);\n    let areasOfNeighbors = [];\n    let totalAreaOfNeighbors = 0;\n    neighbors.forEach((voronoiIndex) => {\n      const area = areasObjs.find((area) => area.voronoiIndex === voronoiIndex).area;\n      areasOfNeighbors.push(area);\n      totalAreaOfNeighbors+= area;\n    })\n    const avgAreaOfNeighbors = totalAreaOfNeighbors / neighbors.length;\n    let stdOfAreasOfNeighbors = std(areasOfNeighbors);\n    // if there is only one finite neighbor\n    if (stdOfAreasOfNeighbors === 0) {\n      stdOfAreasOfNeighbors = previousNonZeroStdOfAreasOfNeighbors;\n    }\n    previousNonZeroStdOfAreasOfNeighbors = stdOfAreasOfNeighbors;\n    coefficientSigma += (avgAreaOfNeighbors / stdOfAreasOfNeighbors);\n  }\n  \n  // continue skewness calculation\n  const skewnessNumerator = skewnessTopSigma * (1 / n);\n  const skewnessDenominator = Math.pow( (skewnessBottomSigma * (1 / n)) , (3 / 2) );\n  const skewness = skewnessNumerator / skewnessDenominator;\n  \n  // continue coefficient calculation\n  const coefficientNumerator = n * meanArea;\n  console.log('coeffSig', coefficientSigma);\n  const coefficientDenominator = std(areas) * coefficientSigma;\n  const coefficient = coefficientNumerator / coefficientDenominator;\n\n  return {\n    skewness,\n    coefficient\n  }\n}\n\nexport default findSkewnessAndCoefficient","import * as d3 from \"d3\";\nimport {useEffect} from \"react\";\nimport './Graph.sass';\n\n\nfunction Graph (props) {\n\n  const {areas} = props;\n\n  // create intervals along x-axis\n\n  const maxArea = areas.reduce((max, curr) => {\n    return Math.max(max, curr)\n    }, 0)\n  const numberOfAreas = areas.length;\n  const barsDesired = Math.min(numberOfAreas, 100);\n  const intervalSpacing = maxArea / barsDesired;\n  let data = [];\n  let startPt = 0;\n  for (let i = 0; i < barsDesired; i++) {\n    let next = startPt + intervalSpacing;\n    data.push({\n      interval: [startPt, next],\n      areas: [],\n      percentage: 0,\n      startPt: 1 * startPt.toFixed(3)\n    });\n    startPt = next;\n  }\n\n  // Determine the percentage to show along the y-axis and the max value\n\n  for (let area of areas) {\n    for (let obj of data) {\n      const interval = obj.interval;\n      if (area >= interval[0] && area <= interval[1]) {\n        obj.areas.push(area);\n        break;\n      }\n    }\n  }\n  \n  let maxPercentage = 0;\n  \n  data.forEach(obj => {\n    obj.percentage = (obj.areas.length / numberOfAreas) * 100;\n    maxPercentage = Math.max(maxPercentage, obj.percentage);\n  });\n\n  useEffect(renderGraph, [areas]);\n  \n  function renderGraph () {\n    // big help from https://www.d3-graph-gallery.com/graph/barplot_animation_start.html \n    // help with labels from https://bl.ocks.org/d3noob/23e42c8f67210ac6c678db2cd07a747e \n    \n    const color = \"#69b3a2\";\n    \n    // set the dimensions and margins of the graph\n    const margin = {top: 10, right: 10, bottom: 60, left: 50};\n    const width = 500 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    const fontSize = 14 + 5;\n  \n    document.querySelector('.graph-container').innerHTML = '';\n  \n    // append the svg object to the body of the page\n    const svg = d3.select(\".graph-container\")\n      .append(\"svg\")\n        .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\n        //.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .append(\"g\")\n        .attr(\"transform\",\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \n    // X axis\n    const x = d3.scaleLinear()\n      .range([ 0, width ])\n      .domain([0, maxArea + intervalSpacing])\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n      .append(\"path\")\n      .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n    \n    // text label for the x axis\n    svg.append(\"text\")             \n    .attr(\"transform\",\n          \"translate(\" + (width/2) + \" ,\" + \n                          (height + margin.top + margin.bottom - fontSize) + \")\")\n    .style(\"text-anchor\", \"middle\")\n    .text(\"Area\");\n    \n    // Add Y axis\n    const y = d3.scaleLinear()\n      .domain([0, maxPercentage])\n      .range([ height, 0]);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y));\n    \n    // text label for the y axis\n    svg.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 0 - 30 - fontSize)\n        .attr(\"x\",0 - (height / 2))\n        .attr(\"dy\", \"1em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Percentage of cells\");\n    \n    // Bars\n    svg.selectAll(\"mybar\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.startPt); })\n        .attr(\"width\", (width / barsDesired) - 1)\n        .attr(\"fill\", color)\n        // no bar at the beginning thus:\n        .attr(\"height\", function(d) { return height - y(0); }) // always equal to 0\n        .attr(\"y\", function(d) { return y(0); })\n        .attr(\"transform\", \"translate(5, 0)\")\n    \n    // Animation\n    svg.selectAll(\"rect\")\n      .transition()\n      .duration(800)\n      .attr(\"y\", function(d) { return y(d.percentage); })\n      .attr(\"height\", function(d) { return height - y(d.percentage); })\n      .delay(function(d,i){return(i*10)})\n\n    // render axes on top\n    d3.selectAll(\"rect\").lower();\n  }\n\n  return (\n    <div className=\"graph-container\"></div>\n  )\n}\n\nexport default Graph;","import * as d3 from \"d3\";\nimport {useEffect} from \"react\";\nimport './Diagram.sass';\n\nfunction Diagram (props) {\n\n  const {positions, apices} = props;\n\n  let renderPositions = [...positions];\n  let renderMaxes = [apices.max[0], apices.max[1]];\n\n  // shift if minimums fall in the negative\n  if (apices.min[0] < 0 || apices.min[1] < 0) {\n    let xShift = 0;\n    let yShift = 0;\n    if (apices.min[0] < 0) {\n      xShift = -1 * apices.min[0];\n    }\n    if (apices.min[1] < 0) {\n      yShift = -1 * apices.min[1];\n    }\n    renderPositions = renderPositions.map((position) => {\n      return [\n        (position[0] + xShift),\n        (position[1] + yShift)\n      ]\n    });\n    renderMaxes = [renderMaxes[0] + xShift, renderMaxes[1] + yShift];\n  }\n\n\n  // find max between x and y maxes\n  const renderMax = Math.max(renderMaxes[0], renderMaxes[1]);\n\n  // find factor to enlarge or shrink by\n  const width = 1000;\n  const height = 1000;\n  const factor = width / renderMax;\n\n  renderPositions = renderPositions.map((position) => {\n    return [\n      position[0] * factor,\n      position[1] * factor\n    ]\n  });\n\n  // have first three positions in beginning of animation\n  let tempPositions = renderPositions.slice(0,3);\n\n  useEffect(renderDiagram, [positions, apices]);\n  \n  function renderDiagram () {\n    // big help from https://observablehq.com/@d3/circle-dragging-iii?collection=@d3/d3-delaunayv\n  \n    document.querySelector(\".diagram-container\").innerHTML = '';\n  \n    const svg = d3.select(\".diagram-container\")\n    .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .attr(\"stroke-width\", 2);\n    \n    let voronoi = d3.Delaunay\n      .from(tempPositions)\n      .voronoi([0, 0, width, height]);\n  \n    svg.append(\"g\")\n      .selectAll(\"circle\")\n      .data(renderPositions)\n      .join(\"circle\")\n        .attr(\"cx\", d => d[0])\n        .attr(\"cy\", d => d[1])\n        .attr(\"r\", 1)\n        .attr(\"fill\", \"black\");\n  \n    const mesh = svg.append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"d\", voronoi.render());\n  \n    function update(tempPositions) {\n      const voronoi = d3.Delaunay.from(tempPositions).voronoi([0, 0, width, height]);\n      mesh.attr(\"d\", voronoi.render());\n    }\n  \n    for (let i = 0 ; i < renderPositions.length; i++) {\n      // skip if initial first three positions\n      if (i < 3) {\n        continue;\n      }\n      setTimeout(()=> {\n        tempPositions.push(renderPositions[i]);\n        update(tempPositions)\n      },i * 2)\n    }\n  }\n\n  return (\n    <div className=\"diagram-container\"></div>\n  )\n}\n\nexport default Diagram;","import CountUp from 'react-countup';\nimport './Calculations.sass';\n\nfunction Calculations (props) {\n  const {name, value} = props;\n\n  function countDecimals (value) {\n    const arrays = value.toString().split('.');\n    if (arrays.length === 1) {\n      return 0\n    }\n    return arrays[1].length;\n  }\n\n  const decimals = countDecimals(value);\n\n  return (\n    <div className=\"calculations-container\">\n      <span className=\"value-name\">{name}</span>\n      <CountUp className=\"value\"\n        start={0}\n        end={value}\n        duration={1}\n        decimals={decimals}\n        />\n    </div>\n  )\n}\n\nexport default Calculations;","export default __webpack_public_path__ + \"static/media/close.244b6687.svg\";","import './Popup.sass';\nimport {useEffect, useRef} from 'react';\nimport close from '../assets/close.svg';\n\nfunction Popup (props) {\n  const {isOpen, child} = props.obj;\n  const popup = useRef(null);\n\n  useEffect(()=> {\n    if (isOpen) {\n      popup.current.hidden = false;\n    } else {\n      popup.current.hidden = true;\n    }\n  })\n\n  return (\n    <div hidden ref={popup} id=\"popup\">\n      <input className=\"close-button\" type=\"image\" src={close} alt=\"close\" onClick={props.close}></input>\n      <div className=\"popup-window\">\n        <div className=\"popup-content-container\">\n        <div>{child}</div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Popup;","import './App.sass';\nimport Footer from './footer/Footer';\nimport {useState, useEffect} from 'react';\nimport getInitialPositions from './helpers/getInitialPositions';\nimport getApices from './helpers/getApices';\nimport {Delaunay} from 'd3';\nimport findFinite from './helpers/findFinite';\nimport getAreaInfo from './helpers/getAreaInfo';\nimport findSkewnessAndCoefficient from './helpers/findSkewnessAndCoefficient';\nimport Graph from './graph/Graph';\nimport Diagram from './diagram/Diagram';\nimport Calculations from './calculations/Calculations';\nimport Popup from './popup/Popup';\nimport Downloads from './downloads/Downloads';\n\nfunction App() {\n  \n  function processPositions(positions) {\n    const apices = getApices(positions);\n    // initiate voronoi\n    const buffer = 100;\n    const voronoi = Delaunay.from(positions).voronoi([apices.min[0] - buffer, apices.min[1] - buffer, apices.max[0] + buffer, apices.max[1] + buffer]);\n    const isFinite = findFinite(voronoi);\n    const areasInfo = getAreaInfo(voronoi, isFinite);\n    if (areasInfo.areas.length === 0) {\n      throw new Error('There are no finite cells to calculate areas for. Please try adding more coordinates.')\n    }\n    const {skewness, coefficient} = findSkewnessAndCoefficient(areasInfo, voronoi, isFinite);\n    return {\n      positions: positions,\n      apices: apices,\n      areas: areasInfo.areas,\n      skewness: skewness,\n      coefficient: coefficient\n    }\n  }\n\n  function changePositions(positions) {\n    try {\n      const newObj = processPositions(positions);\n      setPositionsObj(newObj);\n    } catch (e) {\n        alert (e);\n        window.location.reload();\n    }\n  }\n  \n  const [positionsObj, setPositionsObj] = useState(processPositions(getInitialPositions()));\n\n  const [popupObj, setPopupObj] = useState({\n    isOpen:false,\n    child: <div></div>\n  })\n\n  function openPopup (child, childTypeName = \"notDownloads\") {\n    let childEl = child;\n    if (childTypeName === \"Downloads\") {\n      childEl = <Downloads positionsObj={positionsObj} />\n    }\n    setPopupObj({\n      isOpen: true,\n      child: childEl\n    })\n  }\n\n  function closePopup () {\n    setPopupObj({\n      isOpen: false,\n      child: <div></div>\n    })\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key !== 'Escape') {\n        return;\n      }\n      closePopup();\n    })\n  }, [])\n\n  const DiagramComp = <Diagram positions={positionsObj.positions} apices={positionsObj.apices}/>;\n  const SkewnessComp = <Calculations name={\"Skewness\"} value={positionsObj.skewness} />;\n  const CoefficientComp = <Calculations name={\"Coefficient\"} value={positionsObj.coefficient} />;\n  const GraphComp = <Graph areas={positionsObj.areas} />;\n\n  return (\n    <div className='container'>\n      <Popup obj={popupObj} close={closePopup} />\n      <div className=\"centered-container\">\n        <div className=\"cell\" onClick={() => openPopup(DiagramComp)}>\n          {DiagramComp}\n        </div>\n        <div className=\"cell\" onClick={() => openPopup(SkewnessComp)}>\n          {SkewnessComp}\n        </div>\n        <div className=\"cell\" onClick={() => openPopup(CoefficientComp)}>\n          {CoefficientComp}\n        </div>\n        <div className=\"cell\" onClick={() => openPopup(GraphComp)}>\n          {GraphComp}\n        </div>\n      </div>\n      <Footer positionsCallBack={changePositions} openPopup={openPopup} closePopup={closePopup}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}